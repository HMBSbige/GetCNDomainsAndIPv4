name: CI

on: [push, pull_request]

env:
  ProjectName: get_cnip
  CARGO_TERM_COLOR: always

jobs:
  build-linux:
    runs-on: ubuntu-latest
    env:
      RUST_BACKTRACE: full
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
          - aarch64-unknown-linux-gnu
          - aarch64-unknown-linux-musl

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        default: true

    - name: Install cross
      run: cargo install cross

    - name: Build ${{ matrix.target }}
      run: cross build --release --target="${{ matrix.target }}"

    - name: strip
      continue-on-error: true
      run: strip target/${{ matrix.target }}/release/${{ env.ProjectName }}

    - name: Run UPX
      continue-on-error: true
      uses: crazy-max/ghaction-upx@v1
      with:
        files: target/${{ matrix.target }}/release/${{ env.ProjectName }}
        args: --best

    - name: Upload ${{ matrix.target }}
      continue-on-error: true
      if: ${{ !startsWith(github.ref, 'refs/tags/') }}
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.ProjectName }}.${{ matrix.target }}
        path: target/${{ matrix.target }}/release/${{ env.ProjectName }}

  build-windows:
    runs-on: windows-latest
    env:
      RUST_BACKTRACE: full
      TARGET : x86_64-pc-windows-msvc

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        default: true

    - name: Build ${{ env.TARGET }}
      run: cargo build --release --target="${{ env.TARGET }}"

    - name: Run UPX
      continue-on-error: true
      uses: crazy-max/ghaction-upx@v1
      with:
        files: target/${{ env.TARGET }}/release/${{ env.ProjectName }}.exe
        args: --best

    - name: Upload ${{ env.TARGET }}
      continue-on-error: true
      if: ${{ !startsWith(github.ref, 'refs/tags/') }}
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.ProjectName }}.${{ env.TARGET }}
        path: target/${{ env.TARGET }}/release/${{ env.ProjectName }}.exe
